function LaTeXCode = OptimalStrategy2LaTeX(AttackStrategies, AttackDistribution, DefenseStrategies, DefenseDistribution, PayoffMatrix)
    LaTeXCode = '';
    NewLine = char(13);
    
    % Begin of TikZ environment
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, ... 
        '%!TEX root = ../Main.tex', ...
        NewLine, ...
        NewLine, '\begin{tikzpicture}', ...
        NewLine, '[line width = 0.4pt,', ...
        NewLine, 'attack/.style = {anchor = north, align =center, font = \scriptsize},', ...
        NewLine, 'attackdescription/.style = {anchor = west, align = left, font = \tiny, rotate = 270},', ...
        NewLine, 'defense/.style = {align = center, font = \scriptsize},', ...
        NewLine, 'defensedescription/.style = {anchor = west, align = left, font = \tiny}]', ...
        NewLine, '\linespread{1}', ...
        NewLine, '\node[anchor = north east, align = right, font = \scriptsize] at (2.5, 10) {Attack\\Strategy};',...
        NewLine, '\node[anchor = south west, align = left, font = \scriptsize] at (0, 7.5) {Defense\\Strategy};',...
        NewLine, '\node[anchor = north west, align = left, font = \scriptsize] at (0, 10) {Payoff\\Matrix of\\Defense\\System};');  
    
    TableWidth = 3.5;
    TableHeight = 3.5;
    
    % Print defense strategies
    y = 7;
    for i = 1:numel(DefenseStrategies)
        for j = 1:numel(DefenseStrategies{i})
            if isequal(DefenseStrategies{i}{j}.Name, 'do nothing')
                LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ... 
                    '\node[defense] at (0.3, ', num2str(y), ') {--};');
            else
                LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ... 
                    '\node[defense] at (0.3, ', num2str(y), ') {$', ...
                    DefenseStrategies{i}{j}.Label(1), '_{', num2str(str2double(DefenseStrategies{i}{j}.Label(2:3))), ...
                    '}$};');
            end
            
            LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
                '\node[defensedescription] at (0.7, ', num2str(y), ') {\parbox{1.6cm}{\begin{flushleft}', ...
                DefenseStrategies{i}{j}.Name, '\end{flushleft}}};');
            y = y - 1;
            TableHeight = TableHeight + 1;
        end
    end
    
    % Print attack strategies 
    x = 3;
    for i = 1:numel(AttackStrategies)
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\node[attack] at (', num2str(x), ', 10) {$', AttackStrategies{i}.Label(1), ...
            '_{', num2str(str2double(AttackStrategies{i}.Label(2:3))), '}$};');
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\node[attackdescription] at (', num2str(x), ', 9.5) {\parbox{1.8cm}{\begin{flushleft}', ...
            AttackStrategies{i}.Name, '\end{flushleft}}};');
        x = x + 1;
        TableWidth = TableWidth + 1;
    end
    
    % Print payoff value
    Index = 0;
    for i = 1:numel(DefenseStrategies)
        Index = Index + numel(DefenseStrategies{i});
        for j = 1:numel(AttackStrategies)
            x = 2 + j;
            y = 7.5 - Index + 0.5 * numel(DefenseStrategies{i});
            Number = num2str(PayoffMatrix(j, i),'%10.2e\n');
            if PayoffMatrix(j, i) > 0
                PreNumber = Number(1:4);
                SufNumber = num2str(str2double(Number(6:end)));
            else
                PreNumber = Number(1:5);
                SufNumber = num2str(str2double(Number(7:end)));
            end
            LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
                '\node[font = \scriptsize] at (', num2str(x), ', ', num2str(y), ') {$', ...
                PreNumber, '$};');
            LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
                '\node[anchor = south east] at (' , num2str(x + 0.5), ', ', num2str(y - 0.5), ...
                ') {\scalebox{0.6}{$\cdot 10^{', SufNumber, '}$}};');
        end
    end
    
    % Print attack distribution
    Index = 0;
    for i = 1:numel(AttackDistribution)
        Index = Index + 1;
        Number = [num2str(round(AttackDistribution(i) * 100)), '\%'];
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\fill[black!30] (', ...
            num2str(2 + Index - 0.5), ', ', num2str(10 - TableHeight), ') -- (', ...
            num2str(2 + Index + 0.5), ', ', num2str(10 - TableHeight), ') -- (', ...
            num2str(2 + Index + 0.5), ', ', num2str(10 - TableHeight + AttackDistribution(i)), ') -- (', ...
            num2str(2 + Index - 0.5), ', ', num2str(10 - TableHeight + AttackDistribution(i)), ') -- cycle;');
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\shadowtext[font = \scriptsize] at (', num2str(2 + Index), ', ', num2str(10 - TableHeight + 0.5), ...
            ') {$', Number, '$};');
    end
    
    % Print defense distribution
    Index = 0;
    for i = 1:numel(DefenseStrategies)
        Index = Index + numel(DefenseStrategies{i});
        Number = [num2str(round(DefenseDistribution(i) * 100)), '\%'];
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\fill[black!30] (', ...
            num2str(TableWidth), ', ', num2str(7.5 - Index + numel(DefenseStrategies{i})), ') -- (', ...
            num2str(TableWidth), ', ', num2str(7.5 - Index), ') -- (', ...
            num2str(TableWidth - 0.97*DefenseDistribution(i)), ', ', num2str(7.5 - Index), ') -- (', ...
            num2str(TableWidth - 0.97*DefenseDistribution(i)), ', ', num2str(7.5 - Index + numel(DefenseStrategies{i})), ') -- cycle;');
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\shadowtext[font = \scriptsize] at (', num2str(0 + TableWidth - 0.5), ', ', num2str(7.5 - Index + 0.5*numel(DefenseStrategies{i})), ...
            ') {$', Number, '$};');
    end
    
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\node[anchor = west] at (0, ', num2str(10 - TableHeight + 0.5), ...
        ') {\scalebox{0.8}{\parbox{2.7cm}{\begin{flushleft}\scriptsize Distribution of Attacker''s Mixed Strategy Probability\end{flushleft}}}};');
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\node[anchor = west, rotate = -90] at (', num2str(0 + TableWidth - 0.5), ...
        ', 10) {\scalebox{0.8}{\parbox{2.7cm}{\begin{flushleft}\scriptsize Distribution of defense System''s Mixed Strategy Probability\end{flushleft}}}};');

    % Print white table lines
    Index = 0;
    for i = 1:numel(DefenseStrategies)
        for j = 1:numel(DefenseStrategies{i})
            Index = Index + 1;
        end
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\draw[line width = 1.2pt, white] (0, ', num2str(7.5 - Index), ') -- (', num2str(0 + TableWidth), ' ,', ...
            num2str(7.5 - Index), ');');
    end
    Index = Index + 1;
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1.8pt, white] (0, ', num2str(7.5 + 1 - Index), ') -- (', num2str(0 + TableWidth), ' ,', ...
        num2str(7.5 + 1 - Index), ');');
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1.8pt, white] (0, 7.5) -- (', num2str(0 + TableWidth), ' ,7.5);');
    
    Index = 0;
    for i = 1:numel(AttackStrategies)
        Index = Index + 1;
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\draw[line width = 1.2pt, white] (', num2str(2.5 - 1 + Index), ', 10) -- (', num2str(2.5 - 1 + Index), ...
            ', ', num2str(10 - TableHeight), ');');
    end
    Index = Index + 1;
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1.8pt, white] (', num2str(2.5 - 1 + Index), ', 10) -- (', num2str(2.5 - 1 + Index), ...
        ', ', num2str(10 - TableHeight), ');');
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1.8pt, white] (2.5, 10) -- (2.5,', num2str(10 - TableHeight), ');');
    
    % Print black table lines
    Index = 0;
    for i = 1:numel(DefenseStrategies)
        for j = 1:numel(DefenseStrategies{i})
            Index = Index + 1;
        end
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\draw (0, ', num2str(7.5 - Index), ') -- (', num2str(0 + TableWidth), ' ,', ...
            num2str(7.5 - Index), ');');
    end
    Index = Index + 1;
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1pt] (0, ', num2str(7.5 + 1 - Index), ') -- (', num2str(0 + TableWidth), ' ,', ...
        num2str(7.5 + 1 - Index), ');');
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1pt] (0, 7.5) -- (', num2str(0 + TableWidth), ' ,7.5);');
    
    Index = 0;
    for i = 1:numel(AttackStrategies)
        Index = Index + 1;
        LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
            '\draw (', num2str(2.5 - 1 + Index), ', 10) -- (', num2str(2.5 - 1 + Index), ...
            ', ', num2str(10 - TableHeight), ');');
    end
    Index = Index + 1;
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1pt] (', num2str(2.5 - 1 + Index), ', 10) -- (', num2str(2.5 - 1 + Index), ...
        ', ', num2str(10 - TableHeight), ');');
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        '\draw[line width = 1pt] (2.5, 10) -- (2.5,', num2str(10 - TableHeight), ');');
    
    % Draw diagbox lines
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, ...
        NewLine, '\draw (0, 8.7) -- (2.5, 7.5);',...
        NewLine, '\draw (1, 10) -- (2.5, 7.5);');
    
    % End of TikZ environment
    LaTeXCode = Functions.ConcatenateString(LaTeXCode, NewLine, '\end{tikzpicture}');
    clipboard('copy', LaTeXCode);
end